title:
TypeError: Failed to convert object of type <class 'list'> to Tensor. Contents: [None, None, None]. Consider casting elements to a supported type.

user:
Liozizy

status:
open

contributor:

labels:
stat:awaiting response

description:
I have 4 params: out2, cur_x_input, cur_y_input, cur_z_input.Their shape is:

out2: [None, 1]
cur_x_input: [None, 4, 1]
cur_y_input: [None, 4, 1]
cur_z_input: [None, 4, 1]

But when I execute the following code：

pressure_grad_x = tf.keras.backend.gradients(out2, cur_x_input)[0]
pressure_grad_y = tf.keras.backend.gradients(out2, cur_y_input)[0]
pressure_grad_z = tf.keras.backend.gradients(out2, cur_z_input)[0]
pressure_grad = tf.convert_to_tensor([pressure_grad_x, pressure_grad_y, pressure_grad_z])

It will report an error：

TypeError: Failed to convert object of type <class 'list'> to Tensor. Contents: [None, None, None]. Consider casting elements to a supported type.

I find that the value of pressure_grad_x (or pressure_grad_y, or pressure_grad_z) is None. It means that the result of tf.keras.backend.gradients(out2, cur_x_input)[0]
(or tf.keras.backend.gradients(out2, cur_y_input)[0], or tf.keras.backend.gradients(out2, cur_z_input)[0]) is None
The version of Tensorflow is 2.6.0

How should I solve this problem？
Thank you very much!
